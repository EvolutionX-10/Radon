# Development Docker Compose for Radon Discord Bot
# Uses cloud services (MongoDB Atlas + Redis Cloud) with development credentials
services:
  # Discord Bot for Development with Cloud Services
  radon-bot-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: radon-discord-bot-dev
    restart: unless-stopped
    env_file:
      - .env.development # Your development environment file with cloud service credentials
    environment:
      - NODE_ENV=development
      - BUN_ENV=development
    ports:
      - '3001:3000' # Different port from production for local access
    volumes:
      # Mount source code for hot reloading
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./tsconfig.base.json:/app/tsconfig.base.json
      # Mount logs directory for persistence
      - radon-dev-logs:/app/logs
    networks:
      - radon-dev-network
    # Health check to ensure bot is running
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'bun']
      interval: 30s
      timeout: 10s
      start_period: 15s
      retries: 3

volumes:
  radon-dev-logs:
    driver: local

networks:
  radon-dev-network:
    driver: bridge
