# Production Docker Compose for Radon Discord Bot
# Uses cloud services (MongoDB Atlas + Redis Cloud)
services:
  # Discord Bot - Production Configuration with Cloud Services
  radon-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: production # Explicitly target production stage
    container_name: radon-production
    restart: unless-stopped
    env_file:
      - .env # Your .env file with MongoDB Atlas & Redis Cloud credentials
    environment:
      - NODE_ENV=production
      - BUN_ENV=production
    ports:
      - '3000:3000' # For health checks or web dashboard if needed
    volumes:
      - radon-logs:/app/logs # Persist logs
    networks:
      - radon-network
    # Health check to ensure bot is running
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'bun']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

volumes:
  radon-logs:
    driver: local

networks:
  radon-network:
    driver: bridge
